{
  "nav": {
    "repository": "Dépôt",
    "path": "Chemin du document",
    "unsaved": "⚠️ Modifications non sauvegardées",
    "refreshList": "Actualiser la liste",
    "refreshing": "Chargement...",
    "localSave": "Sauvegarde locale (Ctrl+S)",
    "pullNewFiles": "Récupérer de nouveaux fichiers",
    "newDocument": "Nouveau document",
    "config": "Configuration"
  },
  "fileList": {
    "title": "Liste des documents",
    "empty": "Aucun document, cliquez sur \"Récupérer de nouveaux fichiers\" pour en obtenir",
    "pull": "Récupérer",
    "rename": "Renommer",
    "delete": "Supprimer"
  },
  "editor": {
    "selectFile": "Sélectionnez un document pour commencer l'édition",
    "createNew": "ou cliquez sur \"Nouveau document\" pour créer un nouveau fichier",
    "shortcut": "Prend en charge Ctrl+S pour la sauvegarde locale",
    "commitMessage": "Message de commit (optionnel)",
    "saving": "Sauvegarde...",
    "saveToGitHub": "Sauvegarder sur GitHub",
    "loading": "Chargement de l'éditeur...",
    "placeholder": "Tapez # pour créer un titre, ``` pour créer un bloc de code, ou commencez à taper du markdown..."
  },
  "toolbar": {
    "bold": "Gras (Ctrl+B)",
    "italic": "Italique (Ctrl+I)",
    "strikethrough": "Barré",
    "inlineCode": "Code en ligne",
    "heading1": "Titre 1",
    "heading2": "Titre 2",
    "heading3": "Titre 3",
    "paragraph": "Paragraphe",
    "bulletList": "Liste à puces",
    "orderedList": "Liste numérotée",
    "blockquote": "Citation",
    "codeBlock": "Bloc de code",
    "insertTable": "Insérer un tableau",
    "addColumnBefore": "Ajouter une colonne avant",
    "deleteColumn": "Supprimer la colonne",
    "addRowBefore": "Ajouter une ligne avant",
    "deleteRow": "Supprimer la ligne",
    "deleteTable": "Supprimer le tableau",
    "horizontalRule": "Règle horizontale",
    "hardBreak": "Saut de ligne forcé",
    "undo": "Annuler (Ctrl+Z)",
    "redo": "Refaire (Ctrl+Y)"
  },
  "dialog": {
    "confirm": "Confirmer",
    "cancel": "Annuler",
    "createNewFile": "Créer un nouveau document",
    "enterFileName": "Veuillez entrer le nom du fichier",
    "renameFile": "Renommer le fichier",
    "enterNewName": "Veuillez entrer le nouveau nom du fichier",
    "confirmDelete": "Confirmer la suppression du fichier",
    "deleteMessage": "Êtes-vous sûr de vouloir supprimer le fichier \"{name}\" ?",
    "deleteLocalOnly": "Sélectionnez \"Confirmer\" pour supprimer le fichier local\nSélectionnez \"Annuler\" pour n'effectuer aucune action",
    "deleteRemote": "Supprimer le fichier distant",
    "deleteRemoteMessage": "Supprimer également le fichier distant ?\n\nSélectionnez \"Confirmer\" pour supprimer les fichiers distant et local\nSélectionnez \"Annuler\" pour supprimer uniquement le fichier local"
  },
  "toast": {
    "savedLocal": "Sauvegardé localement",
    "localSaveFailed": "Échec de la sauvegarde locale",
    "filePulled": "Fichier récupéré avec succès",
    "pullFailed": "Échec de la récupération du fichier",
    "fileCommitted": "Fichier commité avec succès !",
    "commitFailed": "Échec du commit du fichier",
    "fileCreated": "Fichier \"{name}\" créé avec succès et sauvegardé localement",
    "createFailed": "Échec de la création du fichier",
    "fileRenamed": "Fichier renommé avec succès",
    "renameFailed": "Échec du renommage du fichier",
    "fileDeleted": "Fichier supprimé avec succès",
    "deleteFailed": "Échec de la suppression du fichier",
    "configLoaded": "Configuration chargée automatiquement",
    "refreshed": "Liste des fichiers locaux actualisée"
  },
  "language": {
    "select": "Sélectionner la langue"
  },
  "config": {
    "title": "Configuration GitHub",
    "enterEditor": "Entrer dans l'éditeur",
    "githubConfig": "Configuration GitHub",
    "repoOwner": "Propriétaire du dépôt",
    "repoName": "Nom du dépôt",
    "githubToken": "Token GitHub",
    "documentPath": "Chemin du document",
    "repoOwnerPlaceholder": "ex: username",
    "repoNamePlaceholder": "ex: my-docs",
    "tokenPlaceholder": "ghp_xxxxxxxxxxxxxxxxxxxx",
    "pathPlaceholder": "ex: docs/",
    "tokenHint": "Créer dans GitHub Settings → Developer settings → Personal access tokens",
    "saveToDatabase": "Sauvegarder dans la base de données",
    "saving": "Sauvegarde...",
    "reloadConfig": "Recharger la configuration",
    "configComplete": "✅ Configuration terminée ! Vous pouvez maintenant entrer dans l'éditeur",
    "instructions": "Instructions",
    "step1": "Remplissez les informations de votre dépôt GitHub",
    "step2": "Créez un Personal Access Token (nécessite les permissions repo)",
    "step3": "Sauvegardez la configuration dans la base de données (sauvegarde automatique, pas besoin de reconfigurer)",
    "step4": "Récupérez et committez manuellement les documents dans l'éditeur",
    "step5": "Prend en charge Ctrl+S pour la sauvegarde locale",
    "pleaseCompleteAllFields": "Veuillez remplir tous les champs obligatoires",
    "configSaved": "Configuration sauvegardée dans la base de données !",
    "saveConfigFailed": "Échec de la sauvegarde de la configuration",
    "configNotFound": "Aucune configuration sauvegardée trouvée",
    "initFailed": "Échec de l'initialisation de la base de données",
    "dbInitFailed": "Échec de l'initialisation de la base de données"
  },
  "common": {
    "loading": "Chargement de la configuration...",
    "configLoading": "Chargement de la configuration...",
    "redirecting": "Redirection vers l'éditeur...",
    "pleaseConfigFirst": "Veuillez d'abord configurer les informations GitHub",
    "goToConfig": "Aller à la configuration"
  },
  "errors": {
    "savedLocalFailed": "Échec de la sauvegarde locale",
    "loadLocalFilesFailed": "Échec du chargement des fichiers locaux",
    "pullFileFailed": "Échec de la récupération du fichier",
    "getFileListFailed": "Échec de l'obtention de la liste des fichiers",
    "commitFileFailed": "Échec du commit du fichier",
    "fileModified": "Le fichier a été modifié par d'autres opérations, veuillez d'abord récupérer la dernière version",
    "createFileFailed": "Échec de la création du fichier",
    "getLocalFileCountFailed": "Échec de l'obtention du nombre de fichiers locaux",
    "noFileSHA": "Impossible d'obtenir la valeur SHA du fichier, veuillez d'abord récupérer la dernière version",
    "remoteFileModified": "Le fichier distant a été modifié, veuillez d'abord récupérer la dernière version avant de supprimer",
    "authFailed": "Échec de l'authentification, veuillez vérifier si le Token GitHub est valide",
    "missingRequiredField": "Paramètres requis manquants, veuillez d'abord récupérer le fichier pour obtenir la dernière valeur SHA",
    "requestParameterError": "Erreur de paramètre de requête, veuillez vérifier le chemin du fichier",
    "fileNameExists": "Le nom de fichier \"{name}\" existe déjà, veuillez utiliser un autre nom",
    "loadConfigFailed": "Échec du chargement de la configuration"
  },
  "messages": {
    "noFilesFound": "Aucun fichier trouvé",
    "filePullSuccess": "Fichier récupéré avec succès",
    "saveLocalSuccess": "Sauvegardé localement",
    "saveLocalFailed": "Échec de la sauvegarde locale",
    "cancelPull": "Récupération annulée, version locale conservée",
    "cancelCommit": "Commit annulé",
    "fileCommitSuccess": "Fichier commité avec succès",
    "cancelDelete": "Opération de suppression annulée",
    "bothFilesDeleted": "Les fichiers distant et local ont été supprimés",
    "localFileDeleted": "Fichier local supprimé",
    "configExists": "La configuration existe déjà, chargement ignoré",
    "configAutoLoaded": "Configuration chargée automatiquement",
    "configLoaded": "Configuration chargée"
  },
  "prompts": {
    "enterGithubToken": "Entrer le Token GitHub",
    "enterTokenMessage": "Veuillez entrer le Token GitHub pour terminer la configuration",
    "selectFilesToPull": "Sélectionner les fichiers à récupérer",
    "selectFilesMessage": "{count} fichiers trouvés, veuillez entrer les noms des fichiers à récupérer (séparés par des virgules) :\n\n{fileList}",
    "fileListPlaceholder": "fichier1,fichier2,fichier3",
    "remoteContentDiff": "Le contenu du fichier distant est plus long",
    "remoteContentMessage": "Le contenu du fichier distant est plus long de {diff} caractères que le fichier local.\n\nLe contenu distant contient les différences suivantes :\n{changes}\n\nSélectionnez \"Confirmer\" pour écraser le fichier distant, sélectionnez \"Annuler\" pour annuler le commit.",
    "contentDiffDetected": "Différence de contenu de fichier détectée",
    "contentDiffMessage": "Le contenu du fichier local diffère du fichier distant.\n\nAperçu des différences :\n{diff}\n\nSélectionnez \"Confirmer\" pour écraser le fichier local, sélectionnez \"Annuler\" pour conserver la version locale.",
    "deleteRemoteFileFailed": "Échec de la suppression du fichier distant",
    "deleteRemoteFailedMessage": "Échec de la suppression du fichier distant ({error})\n\nVeuillez supprimer manuellement le fichier distant :\n1. Visiter : {url}\n2. Cliquer sur le bouton supprimer\n3. Committer la suppression\n\nAprès la suppression, cliquez sur \"Confirmer\" pour continuer la suppression du fichier local, ou cliquez sur \"Annuler\" pour annuler l'opération."
  },
  "actions": {
    "pulling": "Récupération du fichier : {path}",
    "gettingFileList": "Obtention de la liste des fichiers distants...",
    "savingBeforeCommit": "Sauvegarde locale avant commit...",
    "committingFile": "Commit du fichier : {path}",
    "fileCommitSuccess": "Fichier commité avec succès"
  },
  "ui": {
    "emptyFileList": "Aucun document, cliquez sur \"Récupérer de nouveaux fichiers\" pour en obtenir",
    "pullFromGithub": "Récupérer la dernière version depuis GitHub",
    "pullShort": "Récupérer",
    "pullIcon": "↓",
    "renameFile": "Renommer le fichier",
    "renameShort": "Renommer",
    "renameIcon": "✏️",
    "deleteFile": "Supprimer le fichier",
    "deleteShort": "Supprimer",
    "deleteIcon": "🗑️"
  }
}